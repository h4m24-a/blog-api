// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}


model User {
  id        Int     @id @default(autoincrement())
  username  String  @unique
  password  String  @db.Text        // unlimited-length text storage
  role      Role    @default(USER)  // sets the default value of the role field to USER.
  refreshToken String?              // Added field for storing a refresh token

  posts     Post[]                  // Array of post objects
  comments  Comment[]
}


model Post {
  id        Int      @id @default(autoincrement())
  title     String
  content   String

  createdAt DateTime @default(now())
  published Boolean  @default(false)

  authorId  Int      // id of user who made the post
  author    User     @relation(fields: [authorId], references: [id])

  comments  Comment[]
}



model Comment {
  id        Int       @id @default(autoincrement())
  content   String
  createdAt DateTime  @default(now())

  userId    Int       // id of user who made the comment
  user      User      @relation(fields: [userId], references: [id])

  postId    Int       // id of the post that the comment was made on
  post      Post      @relation(fields: [postId], references: [id])

}


enum Role {           // Role is the name of the enum
  ADMIN               // Admin & User are the possible values that this enum can take.
  USER
}